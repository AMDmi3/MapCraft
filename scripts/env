#!/bin/bash

cd $(dirname $0)
. ./common.sh

usage() {
	echo "Usage:  $0 <COMMAND>

Commands:
   init            -- reset and recreate all needed for developing
   reset-db        -- delete database and reset it to initial scheme
   gen-configs     -- regenerate all configs for developer's environment
"
exit 1;
}

PHP_CONFIG=${SRC_ROOT}/lib/config.php
SCHEME=${SRC_ROOT}/data/scheme/scheme.sql

HUB_CONFIG_TEMPLATE=${CONF_DIR}/hub.config.template

gen-configs() {
	convert_tmpl $PHP_CONFIG.template $PHP_CONFIG
	echo "PHP config has been regenerated"

	convert_tmpl $HUB_CONFIG_TEMPLATE $HUB_CONFIG
	echo "Hub config has been regenerated"
}

reset-db() {
	createdb $DATABASE
	RC=$?
	if [ $RC != 0 ] ; then
		echo "To resolve this error please try following:"
		echo "   su - ; su - postgres              -- change permissions to superuser"
		echo "   createuser -s $USER               -- create DB user as superuser"
		echo "   dropdb $DATABASE                  -- drop existing database"
		echo "Return to your shell and try again"
		exit 2;
	fi

	# Create special user
	dropuser $DB_USER 2>/dev/null || true
 	psql $DATABASE -c "CREATE USER ${DB_USER} WITH PASSWORD '${DB_PASS}' LOGIN CREATEUSER"

	# Prepare scheme
	TMP_SCHEME=${TMP_DIR}/scheme.sql
	cp $SCHEME ${TMP_SCHEME}
	sed -i $TMP_SCHEME -e "s/mapcrafter/$DB_USER/g";
	psql -d ${DATABASE} <${TMP_SCHEME}
	echo "Developer's database has been recreated"
}

compile-hub() {
	echo "Compiling and getting all dependencies for hub ..."
	cd ${SRC_ROOT}/hub
	make all || exit 1;
	echo "Hub has been compiled"
}

case "$1" in
	init)
		compile-hub
		gen-configs
		reset-db
		;;
	reset-db)
		reset-db
		;;
	gen-configs)
		gen-configs
		;;
	*)
		usage;
esac
